clear all
close all
clc

%%
% inputString = ...
%     ['......#.#.'; ...
%     '#..#.#....'; ...
%     '..#######.'; ...
%     '.#.#.###..'; ...
%     '.#..#.....'; ...
%     '..#....#.#'; ...
%     '#..#....#.'; ...
%     '.##.#..###'; ...
%     '##...#..#.'; ...
%     '.#....####'];

% inputString = ...
% ['.#..##.###...#######'; ...
% '##.############..##.'; ...
% '.#.######.########.#'; ...
% '.###.#######.####.#.'; ...
% '#####.##.#.##.###.##'; ...
% '..#####..#.#########'; ...
% '####################'; ...
% '#.####....###.#.#.##'; ...
% '##.#################'; ...
% '#####.##.###..####..'; ...
% '..######..##.#######'; ...
% '####.##.####...##..#'; ...
% '.#####..#.######.###'; ...
% '##...#.##########...'; ...
% '#.##########.#######'; ...
% '.####.#.###.###.#.##'; ...
% '....##.##.###..#####'; ...
% '.#.#.###########.###'; ...
% '#.#.#.#####.####.###'; ...
% '###.##.####.##.#..##'];

inputString = [...
'.#......#...#.....#..#......#..##..#'; ...
'..#.......#..........#..##.##.......'; ...
'##......#.#..#..#..##...#.##.###....'; ...
'..#........#...........#.......##...'; ...
'.##.....#.......#........#..#.#.....'; ...
'.#...#...#.....#.##.......#...#....#'; ...
'#...#..##....#....#......#..........'; ...
'....#......#.#.....#..#...#......#..'; ...
'......###.......#..........#.##.#...'; ...
'#......#..#.....#..#......#..#..####'; ...
'.##...##......##..#####.......##....'; ...
'.....#...#.........#........#....#..'; ...
'....##.....#...#........#.##..#....#'; ...
'....#........#.###.#........#...#..#'; ...
'....#..#.#.##....#.........#.....#.#'; ...
'##....###....##..#..#........#......'; ...
'.....#.#.........#.......#....#....#'; ...
'.###.....#....#.#......#...##.##....'; ...
'...##...##....##.........#...#......'; ...
'.....#....##....#..#.#.#...##.#...#.'; ...
'#...#.#.#.#..##.#...#..#..#..#......'; ...
'......#...#...#.#.....#.#.....#.####'; ...
'..........#..................#.#.##.'; ...
'....#....#....#...#..#....#.....#...'; ...
'.#####..####........#...............'; ...
'#....#.#..#..#....##......#...#.....'; ...
'...####....#..#......#.#...##.....#.'; ...
'..##....#.###.##.#.##.#.....#......#'; ...
'....#.####...#......###.....##......'; ...
'.#.....#....#......#..#..#.#..#.....'; ...
'..#.......#...#........#.##...#.....'; ...
'#.....####.#..........#.#.......#...'; ...
'..##..#..#.....#.#.........#..#.#.##'; ...
'.........#..........##.#.##.......##'; ...
'#..#.....#....#....#.#.......####..#'; ...
'..............#.#...........##.#.#..'];


%%
[x, y] = find(inputString == '#');
numAngList = zeros(size(x));
for i = 1:length(x)
    idxList = [1:(i - 1), (i + 1):length(x)];
    angList = atan2(y(idxList) - y(i), x(idxList) - x(i));
    numAngList(i) = length(unique(angList));
end
idx = find(numAngList == max(numAngList));
[[y(idx), x(idx)] - 1, max(numAngList)]

%%
x2 = x((1:length(x)) ~= idx) - x(idx);
y2 = y((1:length(y)) ~= idx) - y(idx);
distList = sqrt(y2.^2 + x2.^2);
angList = round(mod(atan2(x2, y2)*180/pi + 90, 360), 4);
killList = [];
currAng = -1e-5;
for i = 1:200
    %% ang
    tempAngList = mod(angList - currAng, 360);
    currAng = min(angList(tempAngList == min(tempAngList)));
    angIdx = find(angList == currAng);
    
    %% dist
    currDist = min(distList(angIdx));
    distIdx = find(distList(angIdx) == currDist);
    
    %% loop
    currIdx = angIdx(distIdx);
    if length(currIdx) > 1
        error('hi');
    end
    killList = [killList; ...
        [y2(currIdx) + y(idx) - 1, x2(currIdx) + x(idx) - 1, currIdx, currAng]];
    
    x2(currIdx) = nan;
    y2(currIdx) = nan;
    angList(currIdx) = nan;
    distList(currIdx) = nan;
    
    %% update
    currAng = currAng + 1e-5;
end
killList




