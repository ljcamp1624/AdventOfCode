clear all
close all
clc

%% Initialize computer
% inputString = '3,26,1001,26,-4,26,3,27,1002,27,2,27,1,27,26,27,4,27,1001,28,-1,28,1005,28,6,99,0,0,5';
% inputString = '3,52,1001,52,-5,52,3,53,1,52,56,54,1007,54,5,55,1005,55,26,1001,54,-5,54,1105,1,12,1,53,54,53,1008,54,0,55,1001,55,1,55,2,53,55,53,4,53,1001,56,-1,56,1005,56,6,99,0,0,0,0,10';
inputString = '3,8,1001,8,10,8,105,1,0,0,21,38,63,88,97,118,199,280,361,442,99999,3,9,1002,9,3,9,101,2,9,9,1002,9,4,9,4,9,99,3,9,101,3,9,9,102,5,9,9,101,3,9,9,1002,9,3,9,101,3,9,9,4,9,99,3,9,1002,9,2,9,1001,9,3,9,102,3,9,9,101,2,9,9,1002,9,4,9,4,9,99,3,9,102,2,9,9,4,9,99,3,9,102,4,9,9,101,5,9,9,102,2,9,9,101,5,9,9,4,9,99,3,9,1002,9,2,9,4,9,3,9,101,1,9,9,4,9,3,9,102,2,9,9,4,9,3,9,101,1,9,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,101,1,9,9,4,9,3,9,102,2,9,9,4,9,99,3,9,101,1,9,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,1,9,4,9,3,9,1001,9,1,9,4,9,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,1,9,4,9,99,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,1,9,4,9,3,9,102,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,101,1,9,9,4,9,3,9,102,2,9,9,4,9,3,9,102,2,9,9,4,9,99,3,9,102,2,9,9,4,9,3,9,101,1,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,101,1,9,9,4,9,99,3,9,101,1,9,9,4,9,3,9,101,1,9,9,4,9,3,9,101,1,9,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,1001,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,1001,9,2,9,4,9,99';
commaIdx = strfind(inputString, ',')';
locIdx = [[1; commaIdx + 1], [commaIdx - 1; length(inputString)]];
for i = 1:size(locIdx, 1)
    if strcmp(inputString(locIdx(i, 1):locIdx(i, 2)), '-')
        inputArray(i) = nan;
    else
        inputArray(i) = str2double(inputString(locIdx(i, 1):locIdx(i, 2)));
    end
end

%%
permList = perms(5:9);
for i = 1:size(permList, 1)
    currIdx = ones(5, 1);
    currInputs = [permList(i, :)', zeros(5, 1)];
    currInputIdx = ones(5, 1);
    currArrays = repmat(inputArray, 5, 1);
    j = 1;
    halt = 0;
    
    while halt == 0
        %% Execute ops
        [array, idx, inputFlag, output, halt] = IntcodeOperations(currArrays(j, :), currIdx(j), currInputs(j, currInputIdx(j)));
        
        %% Assign outputs
        currArrays(j, :) = array;
        currIdx(j) = idx;
        if inputFlag == 1        
            currInputIdx(j) = min(currInputIdx(j) + 1, 2);
        end
        if ~isempty(output)
            j = mod(j, 5) + 1;
            currInputs(j, 2) = output;
        end
        
    end
    
    %% Save output
    outputList(i) = currInputs(1, 2);
    
end